name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      qdrant:
        image: qdrant/qdrant
        ports:
          - 6333:6333

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Format check with black
      run: black --check src/ tests/
    
    - name: Lint with ruff
      run: ruff check src/ tests/
    
    - name: Type check with mypy
      run: mypy src/
    
    - name: Test with pytest
      env:
        POSTGRES_URL: postgresql://test_user:test_pass@localhost:5432/test_db
        QDRANT_URL: http://localhost:6333
        EVOLUTION_PHASE: 1
      run: |
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  test-javascript:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install CLI dependencies
      working-directory: ./cli
      run: |
        npm ci
        npm run build
    
    - name: Test CLI
      working-directory: ./cli
      run: npm test
    
    - name: Install SDK dependencies
      working-directory: ./sdk/javascript
      run: |
        npm ci
        npm run build
    
    - name: Test SDK
      working-directory: ./sdk/javascript
      run: npm test
    
    - name: Install Studio dependencies
      working-directory: ./studio
      run: npm ci
    
    - name: Lint Studio
      working-directory: ./studio
      run: npm run lint
    
    - name: Build Studio
      working-directory: ./studio
      run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: conceptdb:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Docker Compose
      run: |
        docker-compose up -d
        sleep 10
        docker-compose ps
        curl -f http://localhost:8000/health || exit 1
        docker-compose down

  integration-test:
    needs: [test-python, test-javascript]
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      qdrant:
        image: qdrant/qdrant
        ports:
          - 6333:6333
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Start API server
      env:
        POSTGRES_URL: postgresql://test_user:test_pass@localhost:5432/test_db
        QDRANT_URL: http://localhost:6333
        EVOLUTION_PHASE: 1
      run: |
        uvicorn src.api.main:app --port 8000 &
        sleep 5
    
    - name: Build CLI
      working-directory: ./cli
      run: |
        npm ci
        npm run build
        npm link
    
    - name: Test CLI integration
      run: |
        conceptdb --version
        conceptdb query "SELECT 1" --api-url http://localhost:8000
    
    - name: Test SDK integration
      working-directory: ./sdk/javascript
      run: |
        npm ci
        npm run build
        npm run test:integration